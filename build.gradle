import xyz.jpenilla.runtask.pluginsapi.DownloadPluginsSpec

plugins {
    id 'java'
    id 'net.minecrell.plugin-yml.paper' version '0.6.0'
    id 'xyz.jpenilla.run-paper' version '2.2.3'
}

group = 'dev.slne.surf'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }

    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"

    compileOnly "dev.jorel:commandapi-bukkit-core:9.3.0"
}

paper {
    main = 'dev.slne.surf.surfeastersearch.SurfEasterSearch'
    bootstrapper = 'dev.slne.surf.surfeastersearch.SurfEasterSearchBootstrap'
    loader = 'dev.slne.surf.surfeastersearch.SurfEasterSearchLoader'
    apiVersion = '1.20'
//    generateLibrariesJson = true

    authors = ['twisti']

    serverDependencies {
        'CommandAPI' {
            required = true
            load = 'BEFORE'
            joinClasspath = true
        }
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    runServer {
        minecraftVersion '1.20.4'
        downloadPlugins(({
            it.modrinth('commandapi', '9.3.0')
        } as Action<DownloadPluginsSpec>))
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
